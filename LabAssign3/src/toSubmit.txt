/*
1.	Write a C Program to Check whether the number you input is Palindrome or Not.
Hint: An integer is a palindrome if the reverse of that number is equal to the original number (for example 121)
*/
#include <stdio.h>
int main()
{
    int num;
    int cpynum = num;
    int revnum = 0;
    scanf("%d" , &num);
    cpynum = num;
    while(num != 0)
    {
        revnum = revnum*10 + num%10;    
        num/=10;
    }
    if(revnum == cpynum)
    {
        printf("\nIs Palindrone");
    }
    else
    {
        printf("\nNot Palindrone");
    }
    
}



/*
2.	Write a C Program to Check Whether a Number is Prime or Not.
Hint: A Prime number should be greater than 1 and It should have only 2 factors which are 1 and the number itself. Example for prime numbers: 2, 3, 5, 7, 11, 13, 17, 19, 23 etc. 
*/
#include <stdio.h>
int main()
{
    int input;
    int truth;
    scanf("%d" , &input);
    for(int i = 2 ; i < input; i++)
    {
        if(input%i == 0)
        {
            printf("Not Prime");
            truth = 0;
            break;
        }
        truth = 1;
    }
    if(truth)
    {
        printf("Is Prime");
    }
}



/*
3.	Write a C program to check whether a three digit number is an Armstrong number or not.
Hint: A three digit number is an Armstrong number if sum of cubes of its digits is equal to the number itself. 
370 is an Armstrong Number because 
370 = 3*3*3 + 7*7*7 + 0*0*0
    = 27 + 343 + 0
    = 370
But 123 is not an Armstrong number
*/
#include <stdio.h>
int main()
{
    int input;
    int tmp;
    int cpyinput;
    int arm = 0;
    scanf("%d" , &input);
    cpyinput = input;
    while(input != 0)
    {
        tmp = (input%10); tmp = tmp*tmp*tmp;
        input/=10;
        arm+=tmp;
    }
    if(arm == cpyinput)
    {
        printf("Is Armstrong");
    }
    else
    {
        printf("Not Armstrong");
    }
}



/*
4.	Write a C Program to find largest of given three numbers.
*/
#include <stdio.h>
int main()
{
   int input1 , input2 , input3;
   scanf("%d%d%d" , &input1 , &input2 , &input3);
   if(input1 < input2)
   {
       if(input2 < input3)
            printf("\n%d" , input3);
        else
            printf("\n%d" , input2);
   }
   else
   {
       if(input1 < input3)
            printf("\n%d" , input3);
        else
            printf("\n%d" , input1);
   }
}



/*
5.	Write a C program to print Fibonacci Sequence up to a certain number input by you.
Hint: Fibonacci series is a series of numbers formed by the addition of the preceding two numbers in the series.
The first two terms are zero and one respectively. The terms after this are generated by simply adding the previous two terms.
*/
#include <stdio.h>
int main()
{
    int term1 = 0, term2 = 1 , term3 = term1+term2, input;
    scanf("%d" , &input);
    printf("\n%d\n%d" , term1 , term2);
    while(term3 <= input)
    {
        printf("\n%d" , term3);
        term1 = term2;
        term2 = term3;
        term3 = term1 + term2;
    }

}